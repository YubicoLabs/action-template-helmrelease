#!/usr/bin/env sh

HR_PATH=$1
OUT_DIR=$2

usage() {
    echo ""
    echo "$(basename $0) </path/to/helmreleases> <out_directory>"
    exit 1
}

if [ -z "${HR_PATH}" ]; then
    echo "Error! No path to HelmReleases specified."
    usage
fi

if [ -z "${OUT_DIR}" ]; then
    echo "Error! No output file specified."
    usage
fi

RELEASES=$(grep -l -r "kind: HelmRelease" ${HR_PATH} 2>/dev/null)
if [ "${RELEASES}" == "" ]; then
    echo "Error! No HelmRelease resources found."
    usage
fi

mkdir -p ${OUT_DIR}

for RELEASE in ${RELEASES}; do
    CHART_REPO=$(yq read ${RELEASE} spec.chart.repository)
    CHART_REPO_NAME=$(echo ${CHART_REPO} | rev | cut -d"/" -f1 | rev)
    CHART_NAME=$(yq read ${RELEASE} spec.chart.name)
    CHART_VER=$(yq read ${RELEASE} spec.chart.version)

    INSTALL_NAME=$(yq read ${RELEASE} metadata.name)
    INSTALL_VALUES=$(yq read ${RELEASE} spec.values)

    if [ -z ${CHART_REPO} ] || [ -z ${CHART_NAME} ] || [ -z ${CHART_VER} ]; then
        echo "Error! A required variable not specified in HelmRelease file."
        echo ""
        echo "Required variables: chart.repository, chart.name, chart.version"
        exit 1
    fi

    helm repo add ${CHART_REPO_NAME} ${CHART_REPO}

    echo "${INSTALL_VALUES}" | helm template ${INSTALL_NAME} ${CHART_NAME} \
        --repo=${CHART_REPO} \
        --version=${CHART_VER} \
        --values=- \
        > ${OUT_DIR}/${INSTALL_NAME}_${CHART_NAME}_${CHART_VER}.yaml

    echo "Success! ${INSTALL_NAME} templated."
done
